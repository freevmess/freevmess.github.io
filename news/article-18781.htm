<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freevmess.github.io/news/article-18781.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)</title>
        <meta name="description" content="一.路由的模块化和统一自动加载 团队之间协作开发，为了防止对统一路由的修改，可以采用路由的模块化自动统一加载的方法，使用webpack的require.context来实现，项目的views目录结构如" />
        <link rel="icon" href="/assets/website/img/freevmess/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Vmess机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freevmess.github.io/news/article-18781.htm" />
    <meta property="og:site_name" content="Free Vmess机场节点分享官网" />
    <meta property="og:title" content="vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)" />
    <meta property="og:image" content="https://freevmess.github.io/uploads/20240910/bcb85f1d7e8540ea02477f15e26345fc.webp" />
        <meta property="og:release_date" content="2024-11-29T00:41:45" />
    <meta property="og:updated_time" content="2024-11-29T00:41:45" />
        <meta property="og:description" content="一.路由的模块化和统一自动加载 团队之间协作开发，为了防止对统一路由的修改，可以采用路由的模块化自动统一加载的方法，使用webpack的require.context来实现，项目的views目录结构如" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <link rel="stylesheet" href="/assets/website/css/freevmess/plugins.css">
    <link rel="stylesheet" href="/assets/website/css/freevmess/style.css">
    <link rel="stylesheet" href="/assets/website/css/freevmess/purple.css">
    <link rel="preload" href="/assets/website/css/freevmess/thicccboi.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-DQF2XGX8MV"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-DQF2XGX8MV');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="content-wrapper">
                <header class="wrapper bg-soft-primary">
            <nav class="navbar navbar-expand-lg center-nav transparent navbar-light">
                <div class="container flex-lg-row flex-nowrap align-items-center">
                    <div class="navbar-brand w-100">
                                                <a href="/">
                            <span>Free Vmess</span>
                        </a>
                                            </div>
                    <div class="navbar-collapse offcanvas-nav">
                        <div class="offcanvas-header d-lg-none d-xl-none">
                            <a href=""><img src="/assets/website/img/freevmess/logo-light.png"></a>
                            <button type="button" class="btn-close btn-close-white offcanvas-close offcanvas-nav-close" aria-label="Close"></button>
                        </div>
                        <ul class="navbar-nav">
                                                        <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="#">关于</a></li>
                            <li class="nav-item"><a class="nav-link" href="#">联系</a></li>
                        </ul>
                        <!-- /.navbar-nav -->
                    </div>
                </div>
                <!-- /.container -->
            </nav>
            <!-- /.navbar -->
        </header>
        <!-- /header -->
        <section class="wrapper bg-soft-primary">
            <div class="container pt-10 pb-12 pt-md-14 pb-md-16 text-center">
                <div class="row">
                    <div class="col-md-9 mx-auto">
                        <h1 class="display-1 mb-3">vue项目几个比较好的实践(路由模块化，打包dll优化，vuex)</h1>
                        <p class="lead px-xxl-10">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                    <!-- /column -->
                </div>
                <!-- /.row -->
            </div>
            <!-- /.container -->
        </section>
        <!-- /section -->
        <section class="wrapper bg-gradient-reverse-primary py-5" id="demos">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <h2><strong>一.路由的模块化和统一自动加载</strong></h2> <p>团队之间协作开发，为了防止对统一路由的修改，可以采用路由的模块化自动统一加载的方法，使用webpack的require.context来实现，项目的views目录结构如下：&nbsp;</p> <p><img fetchpriority="high" decoding="async" alt="" height="271" src="http://img.555519.xyz/uploads/20221230/dc7d737fced5645716371a7adaebc313.jpg"></p> <p>每个页面设置一个router的配置文件，内容如下：</p> <pre><code class="language-javascript">const IndexLayout = () =&gt; import("@/views/index.vue"); setRoutersPath(routers) {     var arryPath = [];     routers.keys().forEach((key) =&gt; {       console.log(key) // ./social.home.vue       var _keyarr = key.split(".");       arryPath.push({         path: _keyarr[1],         component: IndexLayout,         children: [{           path: _keyarr[2],           name: _keyarr[2],           component: routers(key).default,           meta: {             keepAlive: keep.keepAlives()[_keyarr[2]] || false, // 是否缓存             isBack: false  // 页面设置缓存后 刷新页面使用           }         }]       })     })     return arryPath;   }  let routers = require.context('./', false, /.vue/); export default setRoutersPath(routers);</code></pre> <p>然后再统一加载到router中：</p> <pre><code class="language-javascript">import Vue from 'vue'; import VueRouter from 'vue-router'; const Login = () =&gt; import('@/views/login/login.vue'); Vue.use(VueRouter); var rPaths = require.context("../views", true, /\.router\.js/); var arryRouters = []; rPaths.keys().forEach(key =&gt; {   arryRouters = arryRouters.concat(rPaths(key).default) }); const routes = [   {     path: '/',     redirect: '/login'   },   {     path: '/login',     name: "login",     component: Login   },   ...arryRouters ] const router = new VueRouter({   mode: 'hash',   base: process.env.BASE_URL,   routes }); export default router; </code></pre> <h2><strong>二.打包优化之dll优化</strong></h2> <p>打包时间的原则：</p> <ol> <li>模块处理数量决定的</li> <li>用了多少次处理</li> </ol> <p>为了节约打包时间，可以使用dll插件先将vue等第三方插件先预打包成dll文件，操作方式如下</p> <p>1.添加打包dll的webpack文件webpack.dll.config.js</p> <pre><code class="language-javascript">const path = require('path'); const DllPlugin = require('webpack/lib/DllPlugin'); const UglifyJsPlugin = require('uglifyjs-webpack-plugin');    //js压缩 module.exports = {   mode: 'production',   // 入口文件   entry: {     vendor: [       "vue",       "vue-router",       "vuex/dist/vuex.esm.js",       "axios"     ]   },   // 输出文件   output: {     // 文件名称     filename: '[name].dll.js',     // 将输出的文件放到dist目录下     path: path.resolve(__dirname, 'dll'),     library: '_dll_[name]'   },   module: {     rules: [       {         test: /\.vue$/,         loader: 'vue-loader'       },       {         test: /\.js$/,         loader: 'babel-loader',         exclude: /node_modules/       }     ]   },   plugins: [     // 使用插件 DllPlugin     new DllPlugin({       name: '_dll_[name]', //这里的名字应该和上面output的library的名字一直       /* 生成manifest文件输出的位置和文件名称 */       path: path.join(__dirname, 'dll/[name].manifest.json')     }),   ],   optimization: {     minimizer: [       //js压缩       new UglifyJsPlugin({         cache: true,         parallel: true,         sourceMap: false,         uglifyOptions: {           warnings: false,           compress: {             drop_console: true, // console             drop_debugger: false,             pure_funcs: ['console.log'] // 移除console           }         }       }),     ]   } };</code></pre> <p>&nbsp;2.在生产环境的打包webpack的配置中添加插件：</p> <pre><code class="language-javascript">config.plugins.push(    new webpack.DllReferencePlugin({      context: process.cwd(),      manifest: path.resolve(__dirname, `dll/vendor.manifest.json`) // 这里对应生成的manifest.json目录    }), );</code></pre> <p>3.配置package.json</p> <pre><code class="language-javascript">"scripts": {     "serve": "vue-cli-service serve",     "build": "vue-cli-service build",     "build:dll": "npx webpack --config webpack.dll.config.js" // 先运行这个生成dll文件   },</code></pre> <h2>三.vuex的实践</h2> <p>vuex分模块处理，并对需要持久化的模块使用VuexPersistence处理，目录结构如下：</p> <p><img decoding="async" alt="" height="189" src="http://img.555519.xyz/uploads/20221230/85f664f0f4d2579e878fafe8edaab63c.jpg"></p> <p>&nbsp;model目录下的每个文件夹代表一个vuex模块，每个模块的内容统一通过该目录下的index.js export出来。内容如下：</p> <pre><code class="language-javascript">// getters.js const getQhSize = (state) =&gt; state.qh_size; export default {   getQhSize };  // setters.js const setQhSize = (state, size) =&gt; {   state.qh_size = size } export default {   setQhSize, }  //index.js import getters from './getters'; import mutations from './mutations.js'; const state = {   qh_size: "" }; export default {   ispersist: true, // 是否需要持久化存储 true表示需要 false或者不写表示不需要   name: "qh_state",    // vuex 模块的名称 必须要制定   namespaced: true,   state,   getters,   mutations, }; </code></pre> <p>&nbsp;之后，通过最外层目录中的index.js统一装配成store:</p> <pre><code class="language-javascript">import Vue from 'vue'; import Vuex from 'vuex'; import VuexPersistence from 'vuex-persist'; Vue.use(Vuex);  const modelsFile = require.context("./model", true, /index.js$/); var models = {}, persist = []; modelsFile.keys().forEach((key) =&gt; {   // add persist storage   if (modelsFile(key).default.ispersist) {     persist.push(modelsFile(key).default.name)   }   var modelsname = {};   models[modelsFile(key).default.name] = modelsname;   for (var i in modelsFile(key).default) {     modelsname[i] = modelsFile(key).default[i]   } });  const vuexLocal = new VuexPersistence({   storage: window.localStorage,   modules: persist, }) export default new Vuex.Store({   modules: {     ...models   },   plugins: [vuexLocal.plugin] });</code></pre> <p>&nbsp;</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>下一个：<a href="/news/article-18782.htm">IDEA中配置maven环境</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-4-node-share.htm" title="1月4日→22M/S|2025年最新免费节点Free Vmess订阅链接地址分享">1月4日→22M/S|2025年最新免费节点Free Vmess订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-32714.htm" title="解决windows下WslRegisterDistribution failed with error: 0x80070050的问题">解决windows下WslRegisterDistribution failed with error: 0x80070050的问题</a></li>
                        <li class="py-2"><a href="/news/article-21952.htm" title="Vue +Vant 实现顶部搜索栏">Vue +Vant 实现顶部搜索栏</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-free-subscribe-node.htm" title="1月17日→22.2M/S|2025年最新免费节点Free Vmess订阅链接地址分享">1月17日→22.2M/S|2025年最新免费节点Free Vmess订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-13-node-share-links.htm" title="11月13日→18.7M/S|2024年最新免费节点Free Vmess订阅链接地址">11月13日→18.7M/S|2024年最新免费节点Free Vmess订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-40963.htm" title="猫三联是一针就可以治三种病吗多少钱（猫三联要多少钱第一针）">猫三联是一针就可以治三种病吗多少钱（猫三联要多少钱第一针）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-22-free-node-subscribe.htm" title="1月22日→19M/S|2025年最新免费节点Free Vmess订阅链接地址分享">1月22日→19M/S|2025年最新免费节点Free Vmess订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-35157.htm" title="vue 图片资源应该如何存放并引入（public、assets）？">vue 图片资源应该如何存放并引入（public、assets）？</a></li>
                        <li class="py-2"><a href="/news/article-19211.htm" title="让猫挠了轻微出血有事吗猫打了狂犬疫苗会怎么样（让猫挠了出血有事吗以前打过疫苗）">让猫挠了轻微出血有事吗猫打了狂犬疫苗会怎么样（让猫挠了出血有事吗以前打过疫苗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-16-free-subscribe-node.htm" title="12月16日→22.7M/S|2024年最新免费节点Free Vmess订阅链接地址">12月16日→22.7M/S|2024年最新免费节点Free Vmess订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
    </div>
    <!-- /.content-wrapper -->
        <footer>
        <div class="container">
            <div class="row py-3">
                <p align="center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <a href="/">Free Vmess机场节点分享官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <script src="/assets/website/js/frontend/freevmess/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/freevmess/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/freevmess/plugins.js"></script>
    <script src="/assets/website/js/frontend/freevmess/theme.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>